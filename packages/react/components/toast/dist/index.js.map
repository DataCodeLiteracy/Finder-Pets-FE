{
  "version": 3,
  "sources": ["../src/ToastProvider.tsx", "../src/styles.css.ts", "../src/ToastContainer.tsx", "../src/Toast.tsx", "../src/ToastContext.ts"],
  "sourcesContent": ["import { PropsWithChildren, useContext, useRef, useState } from \"react\";\nimport { ToastContainer } from \"./ToastContainer\";\nimport { Toast } from \"./Toast\";\nimport { ToastConfigProps, ToastContext } from \"./ToastContext\";\nimport { ToastPayload } from \"./types\";\n\nexport const ToastProvider = ({ children }: PropsWithChildren<{}>) => {\n  const [toastPayload, setToastPayload] = useState<ToastPayload | undefined>(\n    undefined,\n  );\n\n  const timeoutRef = useRef<number | undefined>(undefined);\n\n  const handleToast = (toastProps: ToastConfigProps) => {\n    const { duration = 3000 } = toastProps;\n\n    if (toastPayload) {\n      setToastPayload(undefined);\n      clearTimeout(timeoutRef.current);\n\n      timeoutRef.current = undefined;\n    }\n\n    setToastPayload(toastProps.payload);\n\n    timeoutRef.current = setTimeout(() => {\n      setToastPayload(undefined);\n      timeoutRef.current = undefined;\n    }, duration);\n  }\n\n  return (\n    <ToastContext.Provider value={{ toast: handleToast }}>\n      {children}\n      <ToastContainer>\n        {toastPayload && <Toast {...toastPayload} />}\n      </ToastContainer>\n    </ToastContext.Provider>\n  );\n}\n\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n\n  if (!context) {\n    throw new Error(\"useToast must be used within a ToastProvider\");\n  }\n\n  return context;\n}\n", "import 'src/styles.css.ts.vanilla.css?source=Ll8xOG42aWszMCB7CiAgcG9zaXRpb246IGZpeGVkOwogIHdpZHRoOiAxMDAlOwogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgcGFkZGluZzogMC41cmVtOwogIGxlZnQ6IDA7CiAgYm90dG9tOiAwOwogIHotaW5kZXg6IDk5OTk5Owp9Ci5fMThuNmlrMzEgewogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogMTcuNXJlbTsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5LTkwMCk7CiAgcGFkZGluZzogMC41cmVtIDAuNzVyZW07CiAgY29sb3I6IHZhcigtLWdyYXktNTApOwogIGJvcmRlci1yYWRpdXM6IHZhcigtLXJhZGlpLW1kKTsKfQ==';\nexport var toastContainerStyle = '_18n6ik30';\nexport var toastStyle = '_18n6ik31';", "import { PropsWithChildren } from \"react\";\nimport { toastContainerStyle } from \"./styles.css\";\n\nexport const ToastContainer = ({ children }: PropsWithChildren<{}>) => {\nreturn (\n  <div id=\"toast-container\" tabIndex={-1} className={toastContainerStyle}>\n    {children}\n  </div>\n);\n};\n", "import { toastStyle } from \"./styles.css\";\nimport { ToastPayload } from \"./types\";\n\nexport const Toast = (props: ToastPayload) => {\n  const { message } = props;\n\n  return <div className={toastStyle}>{message}</div>;\n};\n", "import { createContext } from \"react\";\nimport { ToastPayload } from \"./types\";\n\nexport type ToastConfigProps = {\n  payload: ToastPayload;\n  duration?: number;\n}\n\nexport type ToastContextType = {\n  toast: (toastProps: ToastConfigProps) => void;\n};\n\nexport const ToastContext = createContext<ToastContextType>({\n  toast: () => {},\n}); \n"],
  "mappings": "AAAA,OAA4B,cAAAA,EAAY,UAAAC,EAAQ,YAAAC,MAAgB,QCCzD,IAAIC,EAAsB,YACtBC,EAAa,YCGtB,cAAAC,MAAA,oBAFK,IAAMC,EAAiB,CAAC,CAAE,SAAAC,CAAS,IAExCF,EAAC,OAAI,GAAG,kBAAkB,SAAU,GAAI,UAAWG,EAChD,SAAAD,EACH,ECDO,cAAAE,MAAA,oBAHF,IAAMC,EAASC,GAAwB,CAC5C,GAAM,CAAE,QAAAC,CAAQ,EAAID,EAEpB,OAAOF,EAAC,OAAI,UAAWI,EAAa,SAAAD,EAAQ,CAC9C,ECPA,OAAS,iBAAAE,MAAqB,QAYvB,IAAMC,EAAeD,EAAgC,CAC1D,MAAO,IAAM,CAAC,CAChB,CAAC,EJkBG,OAGqB,OAAAE,EAHrB,QAAAC,MAAA,oBA1BG,IAAMC,EAAgB,CAAC,CAAE,SAAAC,CAAS,IAA6B,CACpE,GAAM,CAACC,EAAcC,CAAe,EAAIC,EACtC,MACF,EAEMC,EAAaC,EAA2B,MAAS,EAEjDC,EAAeC,GAAiC,CACpD,GAAM,CAAE,SAAAC,EAAW,GAAK,EAAID,EAExBN,IACFC,EAAgB,MAAS,EACzB,aAAaE,EAAW,OAAO,EAE/BA,EAAW,QAAU,QAGvBF,EAAgBK,EAAW,OAAO,EAElCH,EAAW,QAAU,WAAW,IAAM,CACpCF,EAAgB,MAAS,EACzBE,EAAW,QAAU,MACvB,EAAGI,CAAQ,CACb,EAEA,OACEV,EAACW,EAAa,SAAb,CAAsB,MAAO,CAAE,MAAOH,CAAY,EAChD,UAAAN,EACDH,EAACa,EAAA,CACE,SAAAT,GAAgBJ,EAACc,EAAA,CAAO,GAAGV,EAAc,EAC5C,GACF,CAEJ,EAEaW,EAAW,IAAM,CAC5B,IAAMC,EAAUC,EAAWL,CAAY,EAEvC,GAAI,CAACI,EACH,MAAM,IAAI,MAAM,8CAA8C,EAGhE,OAAOA,CACT",
  "names": ["useContext", "useRef", "useState", "toastContainerStyle", "toastStyle", "jsx", "ToastContainer", "children", "toastContainerStyle", "jsx", "Toast", "props", "message", "toastStyle", "createContext", "ToastContext", "jsx", "jsxs", "ToastProvider", "children", "toastPayload", "setToastPayload", "useState", "timeoutRef", "useRef", "handleToast", "toastProps", "duration", "ToastContext", "ToastContainer", "Toast", "useToast", "context", "useContext"]
}
